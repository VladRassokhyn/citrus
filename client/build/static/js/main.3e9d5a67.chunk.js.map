{"version":3,"sources":["NewWordForm/NewWordForm.module.css","Reader/Reader.module.css","Header/Header.tsx","api/wordsApi.ts","api/googleApi.ts","NewWordForm/NewWordForm.tsx","static/trash.svg","Word/Word.tsx","Dictionary/Dictionary.tsx","Reader/ReaderWord.tsx","Reader/Reader.tsx","Paginator/paginatorNext.svg","Paginator/Paginator.tsx","Book/Book.tsx","App.tsx","index.tsx","Word/Word.module.css","Dictionary/Dictionary.module.css","Header/Header.module.css"],"names":["module","exports","Header","className","s","wrapper","to","style","marginLeft","color","marginRight","axiosInstance","axios","create","baseURL","wordsApi","get","dto","post","ru","eng","id","delete","page","API_KEY","googleApi","word","type","NewWordForm","props","update","useState","inputValue","setInputValue","translations","setTranslations","showResult","setShowResult","resultClasses","classNames","result","show","handleClear","inputWrapper","input","value","onChange","e","target","addButton","onClick","a","data","translatedText","leftSide","map","translation","resultItem","newWord","status","rightSide","FlipInYAnimation","keyframes","flipInY","FlipInYDiv","styled","div","SingleWord","setUpdateWords","viewAllTranslations","viewAllNatives","isEditMode","setIsEditMode","viewTranslations","setViewTranslations","viewNatives","setViewNatives","useEffect","editWrapperClasses","editWrapperOpen","editWrapper","toLowerCase","split","toUpperCase","splice","length","join","container","pre","prev","width","height","showTrash","src","trashIco","alt","Dictionary","words","setWords","updateWords","setViewAllTranslations","setViewAllNatives","res","buttons","btnActive","btnShow","ZoomInAnimation","zoomIn","ZoomInDiv","ReaderWord","wordRef","useRef","fetchingTranslate","setFetchingTranslate","isShow","setIsShow","isAdded","setIsAdded","formattedWord","forEach","w","i","search","push","left","preWidth","spanWidth","spanStyle","marginTop","current","offsetLeft","document","documentElement","clientWidth","setTimeout","ref","singleWord","notifi","Reader","btn2","orTitle","btn","wordsArray","uuidv4","Paginator","currentPage","totalItems","changer","pagesCount","pages","handleNext","React","useCallback","handlePrev","unshift","getPages","paginatorNext","handleSetPage","Book","localPage","localStorage","getItem","setPage","setPagesCount","numpages","text","setItem","App","exact","path","render","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3e9d5a67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"NewWordForm_addButton__3iUUh\",\"wrapper\":\"NewWordForm_wrapper__10dLz\",\"inputWrapper\":\"NewWordForm_inputWrapper__1aON6\",\"input\":\"NewWordForm_input__228Gr\",\"resultItem\":\"NewWordForm_resultItem__3KoJ-\",\"result\":\"NewWordForm_result__1aQIm\",\"show\":\"NewWordForm_show__kwhYe\",\"leftSide\":\"NewWordForm_leftSide__38041\",\"rightSide\":\"NewWordForm_rightSide__fMhiQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"Reader_inputWrapper__1ScE0\",\"btn\":\"Reader_btn__1VVrR\",\"btn2\":\"Reader_btn2__2qmvn\",\"orTitle\":\"Reader_orTitle__OmRZk\",\"singleWord\":\"Reader_singleWord__LdcgD\",\"translation\":\"Reader_translation__3kqYx\",\"notifi\":\"Reader_notifi__2s2Gn\"};","import React from 'react';\nimport s from './Header.module.css';\nimport {Link} from 'react-router-dom';\n\nexport const Header = () => {\n\n    return <div className={s.wrapper}>\n        <Link to={'/'}><h1 style={{marginLeft: '20px', color: 'var(--color-main)'}}>Dictionary</h1></Link>\n        <Link to={'reader'}><h1 style={{marginRight: '20px', color: 'var(--color-main)'}}>Reader</h1></Link>\n        </div>\n}","import axios from \"axios\"\nimport { Word } from \"../lib/types\"\n\nconst axiosInstance = axios.create({\n    baseURL: \"http://dictionary.us-east-2.elasticbeanstalk.com/api/\",\n})\n\nexport const wordsApi = {\n    async getWords(): Promise<{data: Word[]}>{\n        return await axiosInstance.get('/words')\n    },\n    async postWord(dto: {ru: string, eng: string}): Promise<any>{\n        return await axiosInstance.post('words', {ru: dto.ru, eng: dto.eng})\n    },\n    async deleteWord(id: string): Promise<any>{\n        return await axiosInstance.delete('words/'+id)\n    },\n    async getBook(page: number): Promise<any>{\n        return await axiosInstance.get(`words/book?page=${page}`)\n    }\n}","import axios from \"axios\";\nimport { TranslateResponse } from \"../lib/types\";\n\nconst API_KEY = 'AIzaSyBDPfc_HEF6h0up4F49nLBFTm4ONBkPX14'\n\nconst axiosInstance = axios.create({\n    baseURL: `https://translation.googleapis.com/language/translate/`\n})\n\nexport const googleApi = {\n    async getTranslate(word: string, type: string): Promise<TranslateResponse>{\n        if (type === 'en-ru') {\n            return axiosInstance.get(`v2?key=${API_KEY}&q=${word}&source=en&target=ru`)\n        } else {\n            return axiosInstance.get(`v2?key=${API_KEY}&q=${word}&source=ru&target=en`)\n        }\n    },\n}","import React, {ChangeEvent, useState} from 'react';\nimport s from './NewWordForm.module.css';\nimport {googleApi} from \"../api/googleApi\";\nimport {wordsApi} from \"../api/wordsApi\";\nimport classNames from \"classnames\";\n\ntype Props = {\n    update: (value: boolean) => void\n}\n\nexport const NewWordForm = (props: Props) => {\n\n    const {update} = props\n    const [inputValue, setInputValue] = useState<string>('')\n    const [translations, setTranslations] = useState<{ translatedText: string }[] | null>(null)\n    const [showResult, setShowResult] = useState<boolean>(false);\n\n    const resultClasses = classNames({\n        [s.result]: true,\n        [s.show]: showResult,\n    })\n\n    const handleClear = () => {\n        setInputValue('');\n        setShowResult(false);\n        setTranslations(null);\n    }\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleFetch = () => {\n        setShowResult(true);\n        (async () => {\n            const {data} = await googleApi.getTranslate(inputValue, 'en-ru');\n            if (data.data.translations) {\n                setTranslations(data.data.translations)\n            } else (\n                setTranslations([{translatedText: 'no results'}])\n            )\n        })()\n    }\n\n    const handleAdd = (newWord: string) => {\n        (async () => {\n            const res = await wordsApi.postWord({ru: newWord, eng: inputValue})\n            if (res.status === 200) {\n                update(true)\n            }\n        })();\n        setInputValue('');\n        handleClear();\n    }\n\n    return <div className={s.wrapper}>\n        <div className={s.inputWrapper}>\n            <input\n                className={s.input}\n                value={inputValue}\n                onChange={handleChange}\n            />\n            <button\n                className={s.addButton}\n                onClick={handleFetch}\n            >Translate\n            </button>\n        </div>\n\n        <div className={resultClasses}>\n            {showResult && <>\n                <div className={s.leftSide}>\n                    {translations && translations.map(translation => {\n                        return <div key={translation.translatedText} className={s.resultItem}>\n                            <h1\n                                onClick={() => handleAdd(translation.translatedText)}\n                            >{translation.translatedText}</h1>\n                        </div>\n                    })}\n                </div>\n                <div className={s.rightSide} onClick={handleClear}>\n                    <h1>CLEAR</h1>\n                </div>\n            </>}\n        </div>\n\n\n    </div>\n}","export default __webpack_public_path__ + \"static/media/trash.3cbf024f.svg\";","import React, {Dispatch, SetStateAction, useEffect, useState} from 'react';\nimport {Word} from \"../lib/types\";\nimport s from './Word.module.css'\nimport classNames from \"classnames\";\nimport trashIco from '../static/trash.svg';\nimport {wordsApi} from \"../api/wordsApi\";\nimport styled, {keyframes} from \"styled-components\";\nimport {flipInY} from \"react-animations\";\n\nconst FlipInYAnimation = keyframes`${flipInY}`;\nconst FlipInYDiv = styled.div`\n  animation: forwards .5s ${FlipInYAnimation};\n`;\n\ntype Props = {\n    word: Word\n    setUpdateWords: Dispatch<SetStateAction<boolean>>\n    viewAllTranslations: boolean\n    viewAllNatives: boolean\n}\n\nexport const SingleWord = (props: Props) => {\n    const {word, setUpdateWords, viewAllTranslations, viewAllNatives} = props;\n    const [isEditMode, setIsEditMode] = useState(false);\n    const [viewTranslations, setViewTranslations] = useState(viewAllTranslations)\n    const [viewNatives, setViewNatives] = useState(viewAllNatives)\n\n    useEffect(() => {\n        setViewTranslations(viewAllTranslations);\n        setViewNatives(viewAllNatives)\n    }, [viewAllTranslations, viewAllNatives])\n\n    const editWrapperClasses = classNames({\n        [s.editWrapperOpen]: isEditMode,\n        [s.editWrapper]: true\n    })\n\n    const eng = word.eng.toLowerCase().split('')[0].toUpperCase() + word.eng.toLowerCase().split('').splice(1, word.eng.length - 1).join('');\n    const ru = word.ru.toLowerCase().split('')[0].toUpperCase() + word.ru.toLowerCase().split('').splice(1, word.ru.length - 1).join('');\n\n    const handleChangeEditMode = () => {\n        setIsEditMode(prev => !prev)\n    }\n\n    const handleChangeTranslationsViewMode = () => {\n        if (!viewNatives){\n            setViewNatives(pre => !pre)\n        }\n        setViewTranslations(pre => !pre)\n    }\n    const handleChangeNativesViewMode = () => {\n        if (!viewTranslations){\n            setViewTranslations(pre => !pre)\n        }\n        setViewNatives(pre => !pre)\n    }\n\n    const handleDelete = () => {\n        (async () => {\n            await wordsApi.deleteWord(word.id);\n            setUpdateWords(true)\n        })()\n    }\n\n    return <div className={s.wrapper}>\n        <div className={s.container}>\n            <h1 onClick={handleChangeNativesViewMode}>{viewNatives ? <FlipInYDiv>{eng}</FlipInYDiv> : '********'}</h1>\n            <div onClick={handleChangeEditMode} style={{width: '100%', height: '28px'}}/>\n            <h2 onClick={handleChangeTranslationsViewMode}>{viewTranslations ? <FlipInYDiv>{ru}</FlipInYDiv> : '********'}</h2>\n        </div>\n        <div className={editWrapperClasses}>\n            {isEditMode && <>\n                <img\n                    onClick={handleDelete}\n                    className={s.showTrash}\n                    src={trashIco}\n                    alt={'trash icon'}\n                />\n            </>}\n        </div>\n    </div>\n}","import React, {useEffect, useState} from 'react';\nimport {Word} from \"../lib/types\";\nimport {wordsApi} from \"../api/wordsApi\";\nimport {NewWordForm} from '../NewWordForm/NewWordForm';\nimport {SingleWord} from '../Word/Word';\nimport s from './Dictionary.module.css';\n\nexport const Dictionary = () => {\n\n    const [words, setWords] = useState<Word[]>([])\n    const [updateWords, setUpdateWords] = useState<boolean>(true);\n    const [viewAllTranslations, setViewAllTranslations] = useState(false)\n    const [viewAllNatives, setViewAllNatives] = useState(true)\n\n    useEffect(() => {\n        if (updateWords) {\n            (async () => {\n                const res = await wordsApi.getWords();\n                if (res) setWords(res.data)\n            })()\n            setUpdateWords(false)\n        }\n    }, [updateWords])\n\n    const handleViewAllTranslations = () => {\n        if (!viewAllNatives) {\n            setViewAllNatives(pre => !pre)\n        }\n        setViewAllTranslations(pre => !pre)\n    }\n    const handleViewAllNatives = () => {\n        if (!viewAllTranslations) {\n            setViewAllTranslations(pre => !pre)\n        }\n        setViewAllNatives(pre => !pre)\n    }\n\n    return (\n        <>\n\n            <div className={'main-wrapper'}>\n                <div className={'main-container'}>\n                    <NewWordForm update={setUpdateWords}/>\n                    <div className={s.buttons}>\n                        <button\n                            onClick={handleViewAllNatives}\n                            className={viewAllTranslations ? s.btnActive : s.btnShow}\n                        >Show/hide natives\n                        </button>\n                        <button\n                            onClick={handleViewAllTranslations}\n                            className={viewAllNatives ? s.btnActive : s.btnShow}\n                        >Show/hide translations\n                        </button>\n                    </div>\n                    {words.map(word => <SingleWord\n                        key={word.id}\n                        word={word}\n                        viewAllTranslations={viewAllTranslations}\n                        viewAllNatives={viewAllNatives}\n                        setUpdateWords={setUpdateWords}\n                    />)}\n                </div>\n            </div>\n        </>\n    );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport s from './Reader.module.css'\nimport {googleApi} from \"../api/googleApi\";\nimport styled, {keyframes} from \"styled-components\";\nimport {zoomIn} from \"react-animations\";\nimport {wordsApi} from \"../api/wordsApi\";\n\n\nconst ZoomInAnimation = keyframes`${zoomIn}`;\nconst ZoomInDiv = styled.div`\n  animation: forwards .3s ${ZoomInAnimation};\n`;\n\n\ntype Props = {\n    word: string\n}\n\nexport const ReaderWord = (props: Props) => {\n\n    const {word} = props;\n    const [translations, setTranslations] = useState<{ translatedText: string }[] | null>(null);\n    const wordRef = useRef<HTMLHeadingElement>(null);\n    const [fetchingTranslate, setFetchingTranslate] = useState(false);\n    const [isShow, setIsShow] = useState(false);\n    const [isAdded, setIsAdded] = useState(false);\n\n    let formattedWord: string[] = [];\n    word.split('').forEach((w, i) => {\n        if(w.search(/[^A-Za-z0-9\\s]/) === -1 || i === word.length - 1){\n            formattedWord.push(w)\n        }\n    })\n    formattedWord.join(',')\n\n    const getMarginLeft = (width: number, left: number) => {\n        if (width + left > document.documentElement.clientWidth){\n            return - (width + left - document.documentElement.clientWidth) - 20\n        } else {\n            return 0\n        }\n    }\n    const preWidth = translations ? translations[0].translatedText.length * 13 : 0;\n    const spanWidth = preWidth < 170 ? 170 : preWidth\n    //const spamLeftMargin = wordRef.current ? (wordRef.current.offsetWidth / 2 - (spanWidth / 2 + 18) ) : '0'\n    const spanStyle = {\n        marginTop: '-30px',\n        marginLeft: wordRef.current ? getMarginLeft(spanWidth, wordRef.current.offsetLeft) : 0,\n        width: spanWidth\n    }\n\n    useEffect(() => {\n        if (isAdded) {\n            setTimeout(() => {\n                setIsAdded(false);\n            }, 1500)\n        }\n    }, [isAdded])\n\n    const handleAddWord = () => {\n        (async () => {\n            if (translations) {\n                const res = await wordsApi.postWord({ru: translations[0].translatedText, eng: formattedWord.join('')})\n                if (res.status === 200) {\n                    setIsAdded(true)\n                }\n            }\n        })();\n    }\n\n    useEffect(() => {\n        if (fetchingTranslate) {\n            (async () => {\n                const {data} = await googleApi.getTranslate(formattedWord.join(''), 'en-ru');\n                if (data.data.translations) {\n                    setTranslations(data.data.translations)\n                } else (\n                    setTranslations([{translatedText: 'no results'}])\n                )\n            })()\n            setFetchingTranslate(false)\n        }\n    }, [fetchingTranslate, word])\n\n    const handleFetchTranslate = () => {\n        setFetchingTranslate(true);\n        setIsShow(pre => !pre)\n    }\n\n    return <h6\n        ref={wordRef}\n        style={{color: isShow ? 'red' : 'black'}}\n        className={s.singleWord}\n        onClick={handleFetchTranslate}\n    >\n        {isShow && <ZoomInDiv>\n            <span\n                style={spanStyle}\n                className={s.translation}\n            >{translations && translations[0].translatedText}<h4 onClick={handleAddWord}>ADD</h4></span>\n        </ZoomInDiv>}\n        {formattedWord}\n        {isAdded && <span className={s.notifi}>added</span>}\n    </h6>\n}","import React, {ChangeEvent, useState} from 'react';\nimport s from './Reader.module.css';\nimport {v4 as uuidv4} from 'uuid';\nimport {ReaderWord} from \"./ReaderWord\";\nimport { Link } from 'react-router-dom';\n\nexport const Reader = () => {\n\n    const [inputValue, setInputValue] = useState('');\n    const [words, setWords] = useState<JSX.Element[]>([])\n\n\n    const handleChangeInputValue = (e: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = () => {\n        const wordsArray = inputValue.split(' ').map(word => {\n            return <ReaderWord key={uuidv4()} word={word}/>\n        })\n        setWords(wordsArray);\n    }\n\n    return <div className={'main-wrapper'}>\n        <div className={'main-container'}>\n            <Link to={'/book'}><button className={s.btn2}>Open the book</button></Link>\n            <h3 className={s.orTitle}>Or input text</h3>\n            <div className={s.inputWrapper}>\n                <input value={inputValue} onChange={handleChangeInputValue}/>\n                <button className={s.btn} onClick={handleSubmit}>OK</button>\n            </div>\n            <div style={{marginTop: '20px'}}>\n                {words}\n            </div>\n        </div>\n    </div>\n}","export default __webpack_public_path__ + \"static/media/paginatorNext.a7239a2e.svg\";","import React from 'react';\nimport paginatorNext from './paginatorNext.svg';\n\ntype TProps = {\n  currentPage: number;\n  totalItems: number;\n  changer: (page: number) => void;\n};\n\nconst getPages = (pagesCount: number, currentPage: number, pages: string[]) => {\n  if (pagesCount > 5) {\n    if (currentPage > 2) {\n      for (let i = currentPage - 2; i <= currentPage + 2; i++) {\n        pages.push(`${i}`);\n        if (i === pagesCount) break;\n      }\n    } else {\n      for (let i = 1; i <= 5; i++) {\n        pages.push(`${i}`);\n        if (i === pagesCount) break;\n      }\n    }\n  } else {\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(`${i}`);\n    }\n  }\n\n  if (pages.length === 0) pages = [];\n\n  if (+pages[0] !== 1) pages.unshift('prev');\n\n  if (+pages[4] > 4) pages.push('next');\n};\n\nexport const Paginator: React.FC<TProps> = ({\n  currentPage,\n  totalItems,\n  changer,\n}) => {\n  const pagesCount = totalItems\n\n  const pages: string[] = [];\n\n  const handleNext = React.useCallback(() => {\n    changer(currentPage + 1);\n  }, [currentPage, changer]);\n\n  const handlePrev = React.useCallback(\n    () => changer(currentPage - 1),\n    [currentPage, changer]\n  );\n\n  const handleSetPage = (page: string) => changer(+page)\n\n  getPages(pagesCount, currentPage, pages);\n\n  return (\n    <div className={'pagination-wrapper'}>\n      <div className={'paginator-list'}>\n        {pages.map((page, i) => {\n          if (page === 'prev') {\n            return (\n              <img\n                key={i}\n                onClick={handlePrev}\n                className={'paginator-page paginator-back'}\n                src={paginatorNext}\n                alt={''}\n              />\n            );\n          }\n          if (page === 'next') {\n            return (\n              <img\n                key={i}\n                onClick={handleNext}\n                className={'paginator-page paginator-next'}\n                src={paginatorNext}\n                alt={''}\n              />\n            );\n          }\n          return (\n            <span\n              key={i}\n              onClick={() => handleSetPage(page)}\n              className={\n                currentPage === +page\n                  ? 'paginator-active-page paginator-page'\n                  : 'paginator-page'\n              }\n            >\n              {page}\n            </span>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import React, {useEffect, useState} from 'react';\nimport {wordsApi} from \"../api/wordsApi\";\nimport {ReaderWord} from \"../Reader/ReaderWord\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {Paginator} from \"../Paginator\";\n\nexport const Book = () => {\n\n    const localPage = localStorage.getItem('dictionary_book_page')\n    const [page, setPage] = useState(localPage ? +localPage : 5);\n    const [pagesCount, setPagesCount] = useState(0);\n    const [words, setWords] = useState<JSX.Element[]>([]);\n\n    useEffect(() => {\n        (async () => {\n            const res = await wordsApi.getBook(+page)\n            setPagesCount(res.data.numpages)\n            const wordsArray = res.data.text.split(' ').map((word: string) => {\n                return <ReaderWord key={uuidv4()} word={word}/>\n            })\n            setWords(wordsArray);\n        })()\n    }, [page])\n\n    const changePage = (page: number) => {\n        setPage(page);\n        localStorage.setItem('dictionary_book_page', page + '')\n    }\n\n    return <div className={'main-wrapper'}>\n        <div className={'main-container'}>\n\n\n            <div style={{marginTop: '20px'}}>\n                {words}\n            </div>\n\n            <Paginator currentPage={+page} totalItems={pagesCount} changer={changePage}/>\n        </div>\n    </div>\n}","import React from 'react';\nimport {Header} from \"./Header/Header\";\nimport {Route} from \"react-router\";\nimport {Dictionary} from \"./Dictionary/Dictionary\";\nimport {Reader} from \"./Reader/Reader\";\nimport {Book} from \"./Book/Book\";\n\nexport const App = () => {\n    return <>\n        <Header/>\n        <Route exact path={'/'} render={() => <Dictionary/>}/>\n        <Route exact path={'/reader'} render={() => <Reader/>}/>\n        <Route exact path={'/book'} render={() => <Book/>}/>\n    </>\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Word_container__m9tZT\",\"wrapper\":\"Word_wrapper__3r0TC\",\"editWrapper\":\"Word_editWrapper__1O9Vn\",\"editWrapperOpen\":\"Word_editWrapperOpen__By40C\",\"showTrash\":\"Word_showTrash__1AH2_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnShow\":\"Dictionary_btnShow__kP4tZ\",\"buttons\":\"Dictionary_buttons__2BZoY\",\"btnActive\":\"Dictionary_btnActive__2JJ6g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Header_wrapper__1k2Ho\",\"menuButton\":\"Header_menuButton__AFAdK\"};"],"sourceRoot":""}